{"version":3,"sources":["components/Modal/ModalTest/Modal.module.scss","components/Game/RandomPlayerCoin/RandomPlayerCoin.module.scss","components/Game/SelectionStage/RandomSelect/RandomSelect.module.scss","components/common/PlayerItem/PlayerItem.module.scss","App.module.scss","components/Game/SelectionStage/SelectionStage.module.scss","components/Game/ComparisonStage/ComparisonStage.module.scss","components/Game/Game.module.scss","components/Modal/ModalPlayersWins/Modal.module.scss","reportWebVitals.ts","redux/players-reducer/actionTypes.ts","redux/players-reducer/playerReducer.tsx","redux/game-reducer/actionTypes.ts","redux/game-reducer/constants.ts","redux/game-reducer/gameReducer.tsx","redux/store.tsx","components/Game/SelectionStage/utils.ts","components/Modal/ModalTest/Modal.tsx","redux/players-reducer/actionCreators.ts","components/Modal/ModalTest/ModalTestContainer.tsx","components/Game/PlayersArea/index.tsx","components/Game/PlayersArea/PlayersArea.tsx","components/common/PlayerItem/PlayerItem.tsx","components/Game/SelectionStage/RandomSelect/RandomSelect.tsx","components/Game/SelectionStage/selectionRules.ts","redux/game-reducer/actionsCreators.ts","components/Game/SelectionStage/index.ts","components/Game/ComparisonStage/utils.ts","components/Game/SelectionStage/SelectionStage.tsx","components/Game/ComparisonStage/comparisonBuilder.ts","components/Game/ComparisonStage/index.ts","components/Game/ComparisonStage/ComparisonStage.tsx","components/Game/ComparisonStage/comporisonRules.ts","components/Game/RandomPlayerCoin/index.ts","components/Game/RandomPlayerCoin/RandomPlayerCoin.tsx","components/Game/RandomPlayerCoin/utils.ts","components/Modal/ModalPlayersWins/Modal.tsx","components/Modal/ModalPlayersWins/ModalWinContainer.tsx","components/Game/index.ts","components/Game/Game.tsx","App.tsx","index.tsx","components/Game/PlayersArea/PlayersArea.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","initialState","playerOne","lives","itemArray","ether","playerTwo","playersReducer","state","action","type","payload","Array","slice","length","gameSteps","initialOrder","playerOrder","roundNumber","gameStep","selectionItems","needToChangeRound","comparisonIndex","comparisonItems","playerTwoItems","playerOneItems","comparisonStart","gameReducer","reducers","combineReducers","store","createStore","composeWithDevTools","randomNumber","max","Math","floor","random","playerActions","players","playerActionsTypes","rules","rootModal","document","createElement","id","body","appendChild","setLivesFirstPlayer","setLivesSecondPlayer","addItemFirstPlayer","item","addItemSecondPlayer","setEtherFirstPlayer","setEtherSecondPlayer","ModalTestContainer","connect","livesPlayerOne","livesPlayerTwo","dispatch","value","removeItemSecondPlayer","removeItemFirstPlayer","props","etherRef","React","useRef","livesRef","ReactDOM","createPortal","className","style","modal","modalFunction","onClick","uid","ref","val","current","disabled","Boolean","GameFiledContainer","itemsPlayerOne","itemsPlayerTwo","etherFirstPlayer","etherSecondPlayer","styles","field","secondPlayer","valueContainer","fill","map","index","items","firstPlayer","PlayerItem","visible","noopItem","toString","RandomSelect","onItemSelect","onItemClick","useCallback","container","randomContainer","randomValue","playerSwitcher","player","FIRST_PLAYER","SECOND_PLAYER","setPlayerOrder","order","setGameStep","roundNumberChanged","setRoundChange","setInitialOrder","firstPlayerActions","secondPlayerActions","SelectionStageContainer","firstPlayerItemLength","secondPlayerItemLength","setSelectedItemFirstPlayer","setSelectedItemSecondPlayer","setSelectionItems","resetSelectionStage","startRandom","itemsCount","newState","i","push","filteredSelectionItem","filter","arrayItem","useEffect","changeOrder","changeRound","firstPlayerInNextRound","changePlayerButton","playersItemLength","nextSelectionStep","createEmptyValues","count","values","ComparisonStageContainer","playerOneLives","playerTwoLives","playerOneEther","playerTwoEther","setFirstPlayerLives","setSecondPlayerLives","setFirstPlayerEther","setSecondPlayerEther","setComparisonIndex","setComparisonItems","setComparisonStart","setGameSelectStep","resetPlayersItems","resetComparisonState","firstPlayerItems","secondPlayerItems","formatFirstPlayerItem","formatSecondPlayerItem","firstPlayerAttack","firstPlayerProtect","firstPlayerEther","secondPlayerAttack","secondPlayerProtect","secondPlayerEther","sorter","distributor","firstValue","secondValue","comparisonBuilder","maxLength","setTimeout","comparator","RandomPlayerCoinContainer","chooseFirstPlayer","setSelectionType","answer","spinFirst","spinSecond","first","second","playerModal","ModalWinContainer","wrapper","window","location","reload","GameContainer","stageWrapper","step","gameStepSwitcher","App","useState","isTestModalOpen","setTestModal","appRef","innerWidth","innerHeight","margin","transform","top","left","switchTestPanel","event","code","addEventListener","removeEventListener","appWrapper","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a594ef44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1fdxQ\",\"modalFunction\":\"Modal_modalFunction__1s-s2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RandomPlayerCoin_container__1dtbC\",\"second\":\"RandomPlayerCoin_second__Scjh8\",\"first\":\"RandomPlayerCoin_first__3HKAf\",\"spinFirst\":\"RandomPlayerCoin_spinFirst__3PT0a\",\"spinSecond\":\"RandomPlayerCoin_spinSecond__1H-_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"randomContainer\":\"RandomSelect_randomContainer__3tuPS\",\"Appearing\":\"RandomSelect_Appearing__fi3oS\",\"randomValue\":\"RandomSelect_randomValue__2jusG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PlayerItem_item__3ZbnQ\",\"noopItem\":\"PlayerItem_noopItem__RYt7x\",\"ETHER\":\"PlayerItem_ETHER__CSIFB\",\"ATTACK\":\"PlayerItem_ATTACK__369cb\",\"PROTECT\":\"PlayerItem_PROTECT__3Xim_\",\"disappearAnimation\":\"PlayerItem_disappearAnimation__33_0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3v1_Y\",\"container\":\"App_container__2cBGd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectionStage_container__uX4uR\",\"changePlayerButton\":\"SelectionStage_changePlayerButton__wqRKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComparisonStage_container__2mlcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stageWrapper\":\"Game_stageWrapper__19qAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__2hwgK\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const types = {\r\n    SET_LIVES_FIRST_PLAYER: 'SET_LIVES_FIRST_PLAYER',\r\n    SET_LIVES_SECOND_PLAYER: 'SET_LIVES_SECOND_PLAYER',\r\n    FIRST_PLAYER_ADD_ITEM: 'FIRST_PLAYER_ADD_ITEM',\r\n    SECOND_PLAYER_ADD_ITEM: 'SECOND_PLAYER_ADD_ITEM',\r\n    FIRST_PLAYER_REMOVE_ITEM: 'FIRST_PLAYER_REMOVE_ITEM',\r\n    SECOND_PLAYER_REMOVE_ITEM: 'SECOND_PLAYER_REMOVE_ITEM',\r\n    SET_ETHER_FIRST_PLAYER: 'SET_ETHER_FIRST_PLAYER',\r\n    SET_ETHER_SECOND_PLAYER: 'SET_ETHER_SECOND_PLAYER',\r\n    RESET_ITEMS: 'RESET_ITEMS'\r\n}","import {IAction} from \"../types\";\r\nimport {types} from \"./actionTypes\";\r\nimport {IPlayerReducer} from \"./types\";\r\n\r\nconst initialState: IPlayerReducer = {\r\n    playerOne: {\r\n        lives: 5,\r\n        itemArray: [],\r\n        ether: 0\r\n    },\r\n    playerTwo: {\r\n        lives: 5,\r\n        itemArray: [],\r\n        ether: 0\r\n    }\r\n};\r\n\r\nconst playersReducer = (state = initialState, action: IAction) => {\r\n    switch (action.type) {\r\n        case types.SET_LIVES_FIRST_PLAYER : {\r\n            return {\r\n                ...state, playerOne: {\r\n                    ...state.playerOne,\r\n                    lives: action.payload\r\n                }\r\n            }\r\n        }\r\n        case types.SET_LIVES_SECOND_PLAYER : {\r\n            return {\r\n                ...state, playerTwo: {\r\n                    ...state.playerTwo,\r\n                    lives: action.payload\r\n                }\r\n            }\r\n        }\r\n        case types.FIRST_PLAYER_ADD_ITEM : {\r\n            return {\r\n                ...state, playerOne: {\r\n                    ...state.playerOne,\r\n                    itemArray: action.payload instanceof Array\r\n                        ?\r\n                        [ ...state.playerOne.itemArray, ...action.payload ]\r\n                        :\r\n                        [\r\n                            ...state.playerOne.itemArray,\r\n                            action.payload\r\n                        ]\r\n                }\r\n            }\r\n        }\r\n        case types.SECOND_PLAYER_ADD_ITEM : {\r\n            return {\r\n                ...state, playerTwo: {\r\n                    ...state.playerTwo,\r\n                    itemArray:  action.payload instanceof Array\r\n                        ?\r\n                        [...state.playerTwo.itemArray, ...action.payload]\r\n                        :\r\n                        [\r\n                        ...state.playerTwo.itemArray,\r\n                        action.payload\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n        case types.FIRST_PLAYER_REMOVE_ITEM : {\r\n            return {\r\n                ...state,\r\n                playerOne: {\r\n                    ...state.playerOne,\r\n                    itemArray: state.playerOne.itemArray.slice(0, state.playerOne.itemArray.length - 1)\r\n                }\r\n            }\r\n        }\r\n        case types.SECOND_PLAYER_REMOVE_ITEM : {\r\n            return {\r\n                ...state,\r\n                playerTwo: {\r\n                    ...state.playerTwo,\r\n                    itemArray: state.playerTwo.itemArray.slice(0, state.playerTwo.itemArray.length - 1)\r\n                }\r\n            }\r\n        }\r\n        case types.SET_ETHER_FIRST_PLAYER : {\r\n            return {\r\n                ...state,\r\n                playerOne: {\r\n                    ...state.playerOne,\r\n                    ether: action.payload\r\n                }\r\n            }\r\n        }\r\n        case types.SET_ETHER_SECOND_PLAYER : {\r\n            return {\r\n                ...state,\r\n                playerTwo: {\r\n                    ...state.playerTwo,\r\n                    ether: action.payload\r\n                }\r\n            }\r\n        }\r\n        case  types.RESET_ITEMS : {\r\n            return {\r\n                ...state,\r\n                playerOne: {\r\n                    ...state.playerOne,\r\n                    itemArray: initialState.playerOne.itemArray\r\n                },\r\n                playerTwo: {\r\n                    ...state.playerTwo,\r\n                    itemArray: initialState.playerTwo.itemArray\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default playersReducer;\r\n","export const types = {\r\n    SET_PLAYER_ORDER: 'SET_PLAYER_ORDER',\r\n    ROUND_NUMBER_CHANGED: 'ROUND_NUMBER_CHANGED',\r\n    SET_GAME_STEP: 'SET_GAME_STEP',\r\n    SET_SELECTION_ITEM: 'SET_SELECTION_ITEM',\r\n    SET_ROUND_CHANGE: 'SET_ROUND_CHANGE',\r\n    SET_COMPARISON_INDEX: 'SET_COMPARISON_INDEX',\r\n    SET_COMPARISON_ITEMS: 'SET_COMPARISON_ITEMS',\r\n    SET_COMPARISON_START: 'SET_COMPARISON_START',\r\n    RESET_COMPARISON_STAGE: 'RESET_COMPARISON_STAGE',\r\n    SET_INITIAL_ORDER: 'SET_INITIAL_ORDER'\r\n}\r\n","export const gameSteps = {\r\n\tCHOOSE_FIRST_PLAYER: 'CHOOSE_FIRST_PLAYER',\r\n\tSELECTION_STAGE: 'SELECTION_STAGE',\r\n\tCOMPARISON_STAGE: 'COMPARISON_STAGE',\r\n\tNONE: 'NONE'\r\n}","import { IGameReducer } from \"./types\";\r\nimport { types } from \"./actionTypes\";\r\nimport { gameSteps } from \"./constants\";\r\nimport { IAction } from \"../types\";\r\n\r\nconst initialState: IGameReducer = {\r\n\tinitialOrder: 1,\r\n\tplayerOrder: 1,\r\n\troundNumber: 1,\r\n\tgameStep: gameSteps.CHOOSE_FIRST_PLAYER,\r\n\tselectionItems: [],\r\n\tneedToChangeRound: false,\r\n\t// Need to create comparisonReducer\r\n\tcomparisonIndex: 0,\r\n\tcomparisonItems: {\r\n\t\tplayerTwoItems: [],\r\n\t\tplayerOneItems: []\r\n\t},\r\n\tcomparisonStart: false,\r\n}\r\n\r\nconst gameReducer = (state = initialState, action: IAction) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.ROUND_NUMBER_CHANGED : {\r\n\t\t\treturn {\r\n\t\t\t\t...state, roundNumber: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_PLAYER_ORDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, playerOrder: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_GAME_STEP: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, gameStep: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_SELECTION_ITEM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, selectionItems: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_ROUND_CHANGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, needToChangeRound: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_COMPARISON_INDEX: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, comparisonIndex: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_COMPARISON_ITEMS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, comparisonItems: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_COMPARISON_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, comparisonStart: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.SET_INITIAL_ORDER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, initialOrder: action.payload\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase types.RESET_COMPARISON_STAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcomparisonIndex: initialState.comparisonIndex,\r\n\t\t\t\tcomparisonItems: initialState.comparisonItems,\r\n\t\t\t\tcomparisonStart: initialState.comparisonStart,\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default gameReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport playersReducer from \"./players-reducer/playerReducer\";\r\nimport gameReducer from \"./game-reducer/gameReducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet reducers = combineReducers({\r\n    playersReducer: playersReducer,\r\n    gameReducer: gameReducer\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools());\r\nexport default store;","export function randomNumber(max: number) {\r\n\treturn Math.floor(Math.random() * max);\r\n}\r\n\r\nexport const playerActionsTypes = {\r\n\tPROTECT: 'PROTECT',\r\n\tATTACK: 'ATTACK',\r\n\tETHER: 'ETHER'\r\n}\r\n\r\nexport enum playerActions {\r\n\tPROTECT,\r\n\tATTACK,\r\n\tETHER\r\n}\r\n\r\nexport enum players {\r\n\tFIRST_PLAYER = 1,\r\n\tSECOND_PLAYER = 2\r\n}\r\n\r\nexport const rules = {\r\n\t'ITEM_COUNT': 6,\r\n\t'ITEM_VARIANTS': 3\r\n}\r\n\r\nexport function playerSwitcher (player: number) {\r\n\treturn player === players.FIRST_PLAYER ? players.SECOND_PLAYER : players.FIRST_PLAYER\r\n}\r\n","import React from 'react';\r\nimport style from './Modal.module.scss';\r\nimport ReactDOM from \"react-dom\";\r\nimport { IProps } from \"./ModalTestContainer\";\r\nimport { uid } from \"uid\";\r\nimport { playerActions, randomNumber, rules } from \"../../Game/SelectionStage/utils\";\r\n\r\nlet rootModal = document.createElement('div');\r\nrootModal.id = 'testModal';\r\ndocument.body.appendChild(rootModal);\r\n\r\nexport const Modal: React.FunctionComponent<IProps> = (props) => {\r\n    const {\r\n        setLivesFirstPlayer,\r\n        setLivesSecondPlayer,\r\n        addItemSecondPlayer,\r\n        addItemFirstPlayer,\r\n        removeItemSecondPlayer,\r\n        removeItemFirstPlayer,\r\n        livesPlayerOne,\r\n        livesPlayerTwo,\r\n        setEtherFirstPlayer,\r\n        setEtherSecondPlayer\r\n    } = props;\r\n\r\n    const etherRef = React.useRef<HTMLInputElement>(null);\r\n    const livesRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const onSetterEtherFirstPlayer = () => {\r\n        const val = etherRef?.current?.value;\r\n        setEtherFirstPlayer(+val!)\r\n    };\r\n    const onSetterEtherSecondPlayer = () => {\r\n        const val = etherRef?.current?.value;\r\n        setEtherSecondPlayer(+val!)\r\n    };\r\n    const onSetterLivesFirstPlayer = () => {\r\n        const val = livesRef?.current?.value;\r\n        setLivesFirstPlayer(+val!)\r\n    };\r\n    const onSetterLivesSecondPlayer = () => {\r\n        const val = livesRef?.current?.value;\r\n        setLivesSecondPlayer(+val!)\r\n    };\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className={style.modal}>\r\n            <div className={style.modalFunction}>\r\n                <span> Add Item To Player</span>\r\n                <button onClick={() => {\r\n                    addItemFirstPlayer({\r\n                        id: uid(),\r\n                        value: playerActions[randomNumber(rules.ITEM_VARIANTS)]\r\n                    })\r\n                }}> FIRST\r\n                </button>\r\n                <button onClick={() => {\r\n                    addItemSecondPlayer({\r\n                        id: uid(),\r\n                        value: playerActions[randomNumber(rules.ITEM_VARIANTS)]\r\n                    })\r\n                }}> SECOND\r\n                </button>\r\n            </div>\r\n            <div className={style.modalFunction}>\r\n                <span>Remove item of player</span>\r\n                <button onClick={() => {\r\n                    removeItemFirstPlayer()\r\n                }}> FIRST\r\n                </button>\r\n                <button onClick={() => {\r\n                    removeItemSecondPlayer()\r\n                }}> SECOND\r\n                </button>\r\n            </div>\r\n            <div className={style.modalFunction}>\r\n                <span> Set Live Point Of Player</span>\r\n                <input type=\"number\" ref={livesRef}/>\r\n                <button onClick={onSetterLivesFirstPlayer} disabled={!Boolean(livesPlayerOne)}> FIRST</button>\r\n                <button onClick={onSetterLivesSecondPlayer} disabled={!Boolean(livesPlayerTwo)}> SECOND</button>\r\n            </div>\r\n            <div className={style.modalFunction}>\r\n                <span>Set ether to  player </span>\r\n                <input type=\"number\" ref={etherRef}/>\r\n                <button onClick={onSetterEtherFirstPlayer}>\r\n                    FIRST\r\n                </button>\r\n                <button onClick={onSetterEtherSecondPlayer}>\r\n                    SECOND\r\n                </button>\r\n            </div>\r\n        </div>,\r\n        rootModal\r\n    );\r\n};\r\n\r\n","import { types } from './actionTypes';\r\nimport { IAction, IItemType } from \"../types\";\r\n\r\nexport const setLivesFirstPlayer = (lives: number): IAction => {\r\n    return {\r\n        type: types.SET_LIVES_FIRST_PLAYER,\r\n        payload: lives\r\n    }\r\n};\r\n\r\nexport const setLivesSecondPlayer = (lives: number) => {\r\n    return {\r\n        type: types.SET_LIVES_SECOND_PLAYER,\r\n        payload: lives\r\n    }\r\n};\r\n\r\nexport const addItemFirstPlayer = (item: IItemType | IItemType[]) => {\r\n    return {\r\n        type: types.FIRST_PLAYER_ADD_ITEM,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const addItemSecondPlayer = (item: IItemType | IItemType[]) => {\r\n    return {\r\n        type: types.SECOND_PLAYER_ADD_ITEM,\r\n        payload: item\r\n    }\r\n};\r\n\r\nexport const removeItemFirstPlayer = () => {\r\n    return {\r\n        type: types.FIRST_PLAYER_REMOVE_ITEM,\r\n    }\r\n};\r\n\r\nexport const removeItemSecondPlayer = () => {\r\n    return {\r\n        type: types.SECOND_PLAYER_REMOVE_ITEM,\r\n    }\r\n};\r\n\r\nexport const setEtherFirstPlayer = (ether: number): IAction => {\r\n    return {\r\n        type: types.SET_ETHER_FIRST_PLAYER,\r\n        payload: ether\r\n    }\r\n};\r\n\r\nexport const setEtherSecondPlayer = (ether: number): IAction => {\r\n    return {\r\n        type: types.SET_ETHER_SECOND_PLAYER,\r\n        payload: ether\r\n    }\r\n};\r\n\r\nexport const resetItemsOfPlayers = () => {\r\n    return {\r\n        type: types.RESET_ITEMS\r\n    }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { Modal } from \"./Modal\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n    addItemFirstPlayer,\r\n    addItemSecondPlayer,\r\n    setLivesFirstPlayer,\r\n    setLivesSecondPlayer,\r\n    removeItemFirstPlayer,\r\n    removeItemSecondPlayer,\r\n    setEtherFirstPlayer,\r\n    setEtherSecondPlayer\r\n} from \"../../../redux/players-reducer/actionCreators\";\r\nimport { IStore } from \"../../../redux/types\";\r\n\r\ninterface IMapDispatch {\r\n    readonly setLivesFirstPlayer: (value: number) => void;\r\n    readonly setLivesSecondPlayer: (value: number) => void;\r\n    readonly addItemFirstPlayer: (value: any) => void;\r\n    readonly addItemSecondPlayer: (value: any) => void;\r\n    readonly removeItemSecondPlayer: () => void;\r\n    readonly removeItemFirstPlayer: () => void;\r\n    readonly setEtherFirstPlayer: (value: number) => void;\r\n    readonly setEtherSecondPlayer: (value: number) => void;\r\n}\r\n\r\ninterface IMapState {\r\n    readonly livesPlayerOne: number;\r\n    readonly livesPlayerTwo: number;\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): IMapState => {\r\n    return {\r\n        livesPlayerOne: state.playersReducer.playerOne.lives,\r\n        livesPlayerTwo: state.playersReducer.playerTwo.lives\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => {\r\n    return {\r\n        setLivesFirstPlayer: (value:number) => dispatch(setLivesFirstPlayer(value)),\r\n        setLivesSecondPlayer: (value:number) => dispatch(setLivesSecondPlayer(value)),\r\n        addItemFirstPlayer: (value) => dispatch(addItemFirstPlayer(value)),\r\n        addItemSecondPlayer: (value) => dispatch(addItemSecondPlayer(value)),\r\n        removeItemSecondPlayer: () => dispatch(removeItemSecondPlayer()),\r\n        removeItemFirstPlayer: () => dispatch(removeItemFirstPlayer()),\r\n        setEtherFirstPlayer: (value: number) => dispatch(setEtherFirstPlayer(value)),\r\n        setEtherSecondPlayer: (value: number) => dispatch(setEtherSecondPlayer(value))\r\n    }\r\n};\r\n\r\nexport type IProps = IMapDispatch & IMapState;\r\nexport const ModalTestContainer = connect(mapStateToProps, mapDispatchToProps)(Modal);","import { connect } from \"react-redux\";\r\nimport { PlayersArea } from './PlayersArea';\r\nimport { IStore } from \"../../../redux/types\";\r\n\r\ninterface IMapState {\r\n    readonly livesPlayerOne: number;\r\n    readonly livesPlayerTwo: number;\r\n    readonly itemsPlayerOne: ReadonlyArray<any>;\r\n    readonly itemsPlayerTwo: ReadonlyArray<any>;\r\n    readonly etherFirstPlayer: number;\r\n    readonly etherSecondPlayer: number;\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): IMapState => {\r\n    return {\r\n        livesPlayerOne: state.playersReducer.playerOne.lives,\r\n        livesPlayerTwo: state.playersReducer.playerTwo.lives,\r\n        itemsPlayerOne: state.playersReducer.playerOne.itemArray,\r\n        itemsPlayerTwo: state.playersReducer.playerTwo.itemArray,\r\n        etherFirstPlayer: state.playersReducer.playerOne.ether,\r\n        etherSecondPlayer: state.playersReducer.playerTwo.ether,\r\n    }\r\n};\r\n\r\nexport type IProps = IMapState ;\r\nexport const GameFiledContainer = connect(mapStateToProps)(PlayersArea);","import React from 'react';\r\nimport { IProps } from \"./index\";\r\nimport styles from './PlayersArea.module.scss'\r\n\r\nexport const PlayersArea: React.FunctionComponent<IProps> = (props) => {\r\n\r\n    const {\r\n        livesPlayerOne,\r\n        livesPlayerTwo,\r\n        itemsPlayerOne,\r\n        itemsPlayerTwo,\r\n        etherFirstPlayer,\r\n        etherSecondPlayer\r\n    } = props;\r\n\r\n    return (<div className={styles.field}>\r\n        <div className={styles.secondPlayer}>\r\n            <span>Lives: {livesPlayerTwo}</span>\r\n            <div className={styles.valueContainer}>\r\n                {Array(livesPlayerTwo).fill(null).map((val, index) => <div key={val + index}\r\n                                                                           className={styles.lives}/>)}\r\n            </div>\r\n            <span> Items: {itemsPlayerTwo?.length}</span>\r\n            <div className={styles.valueContainer}>\r\n                {itemsPlayerTwo.map((val, index) => <div key={val + index} className={styles.items}/>)}\r\n            </div>\r\n            <span>Ether :{etherSecondPlayer}</span>\r\n        </div>\r\n        <div className={styles.firstPlayer}>\r\n            <span>Ether : {etherFirstPlayer}</span>\r\n            <div className={styles.valueContainer}>\r\n                {itemsPlayerOne.map((val, index) => <div key={val + index} className={styles.items}/>)}\r\n            </div>\r\n            <span> Items: {itemsPlayerOne?.length}</span>\r\n            <div className={styles.valueContainer}>\r\n                {Array(livesPlayerOne).fill(null).map((val, index) => (\r\n                    <div key={val + index} className={styles.lives}/>))}\r\n            </div>\r\n            <span> Lives: {livesPlayerOne}</span>\r\n        </div>\r\n    </div>)\r\n};","import React from \"react\";\r\nimport styles from \"./PlayerItem.module.scss\";\r\n\r\ninterface IPlayerItem {\r\n\treadonly value: string;\r\n\treadonly visible?: boolean;\r\n}\r\n\r\nexport const PlayerItem: React.FunctionComponent<IPlayerItem> = ({ value, visible }) => {\r\n\treturn <div className={ `${ value ? styles.item : styles.noopItem } ${ styles[value] }` }>\r\n\t\t{ value }\r\n\t\t{value && visible && <p>{ visible.toString() }</p>}\r\n\t</div>\r\n}","import React, { useCallback } from 'react';\r\nimport styles from './RandomSelect.module.scss';\r\nimport { IItemType } from \"../../../../redux/types\";\r\nimport { PlayerItem } from \"../../../common/PlayerItem/PlayerItem\";\r\n\r\ninterface IRandom {\r\n\treadonly selectionItems: ReadonlyArray<IItemType>;\r\n\treadonly onItemSelect: (item: IItemType) => void;\r\n}\r\n\r\nexport const RandomSelect: React.FunctionComponent<IRandom> = ({ selectionItems, onItemSelect }) => {\r\n\r\n\tconst onItemClick = useCallback((item) => () => {\r\n\t\tonItemSelect(item);\r\n\t}, [onItemSelect]);\r\n\r\n\treturn <div className={ styles.container }>\r\n\t\t<div>\r\n\t\t\t{ Boolean(selectionItems.length) && <div className={ styles.randomContainer }>\r\n\t\t\t\t{ selectionItems.map((item: any) => (\r\n\t\t\t\t\t<div key={ item.id } onClick={onItemClick(item)} className={ styles.randomValue }>\r\n\t\t\t\t\t\t<PlayerItem value={item.value}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t/*<div\r\n\t\t\t\t\t\tclassName={ styles.randomValue }\r\n\t\t\t\t\t\tkey={ item.id }\r\n\t\t\t\t\t\tonClick={ onItemClick(item) }\r\n\t\t\t\t\t>{ item.value }</div>*/)) }\r\n            </div> }\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\n","import { players, rules } from \"./utils\";\r\nimport { gameSteps } from \"../../../redux/game-reducer/constants\";\r\nimport { IItemType } from \"../../../redux/types\";\r\n\r\nexport const playerSwitcher = (player: number) => {\r\n\treturn player === players.FIRST_PLAYER ? players.SECOND_PLAYER : players.FIRST_PLAYER\r\n}\r\n\r\ninterface  INextSelectionStep {\r\n\treadonly firstPlayerItemLength: number;\r\n\treadonly secondPlayerItemLength: number;\r\n\treadonly needToChangeRound: boolean;\r\n\treadonly roundNumber: number;\r\n\treadonly playerOrder: number;\r\n\treadonly selectionItems: ReadonlyArray<IItemType>;\r\n\treadonly setGameStep: (step: string) => void;\r\n\treadonly setSelectedItemFirstPlayer: (array: IItemType[]) => void;\r\n\treadonly setSelectedItemSecondPlayer: (array: IItemType[]) => void;\r\n\treadonly setRoundChange: (value: boolean) => void;\r\n\treadonly changeRound: () => void;\r\n\treadonly changeOrder: () => void;\r\n}\r\n\r\nexport const nextSelectionStep = (props: INextSelectionStep) => {\r\n\tconst {\r\n\t\tfirstPlayerItemLength,\r\n\t\tsecondPlayerItemLength,\r\n\t\tneedToChangeRound,\r\n\t\troundNumber,\r\n\t\tplayerOrder,\r\n\t\tselectionItems,\r\n\t\tsetSelectedItemFirstPlayer,\r\n\t\tsetSelectedItemSecondPlayer,\r\n\t\tsetGameStep,\r\n\t\tchangeRound,\r\n\t\tchangeOrder,\r\n\t\tsetRoundChange\r\n\t} = props;\r\n\r\n\r\n\tconst playersItemLength = [firstPlayerItemLength, secondPlayerItemLength];\r\n\r\n\tif (firstPlayerItemLength === rules.ITEM_COUNT && secondPlayerItemLength === rules.ITEM_COUNT) {\r\n\t\tsetGameStep(gameSteps.COMPARISON_STAGE);\r\n\t} else {\r\n\t\tif (needToChangeRound) {\r\n\t\t\tif (roundNumber === 3) {\r\n\t\t\t\tif (playerOrder === players.FIRST_PLAYER) {\r\n\t\t\t\t\tsetSelectedItemFirstPlayer([...selectionItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedItemSecondPlayer([...selectionItems])\r\n\t\t\t\t}\r\n\t\t\t\tsetGameStep(gameSteps.COMPARISON_STAGE);\r\n\t\t\t} else {\r\n\t\t\t\tif (playersItemLength[playerSwitcher(playerOrder) - 1] !== rules.ITEM_COUNT) {\r\n\t\t\t\t\tchangeRound();\r\n\t\t\t\t\tsetRoundChange(false);\r\n\t\t\t\t\tchangeOrder();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchangeRound();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (roundNumber === 3) {\r\n\t\t\t\tif (playerOrder === players.FIRST_PLAYER) {\r\n\t\t\t\t\tsetSelectedItemFirstPlayer([...selectionItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedItemSecondPlayer([...selectionItems])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (playersItemLength[playerSwitcher(playerOrder) - 1] !== rules.ITEM_COUNT) {\r\n\t\t\t\tsetRoundChange(true);\r\n\t\t\t\tchangeOrder();\r\n\t\t\t} else {\r\n\t\t\t\tchangeRound();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","import { types } from \"./actionTypes\";\r\nimport { IAction } from \"../types\";\r\nimport { IComparisonItems } from \"./types\";\r\n\r\nexport const setPlayerOrder = (order: number): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_PLAYER_ORDER,\r\n\t\tpayload: order\r\n\t}\r\n};\r\n\r\nexport const setGameStep = (payload: string): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_GAME_STEP,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const roundNumberChanged = (roundNumber: number): IAction => {\r\n\treturn {\r\n\t\ttype: types.ROUND_NUMBER_CHANGED,\r\n\t\tpayload: roundNumber\r\n\t}\r\n};\r\n\r\nexport const setSelectionItems = (item: any): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_SELECTION_ITEM,\r\n\t\tpayload: item\r\n\t}\r\n};\r\n\r\nexport const setRoundChange = (payload: boolean): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_ROUND_CHANGE,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const setComparisonIndex = (payload: number): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_COMPARISON_INDEX,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const setComparisonItems = (payload: IComparisonItems): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_COMPARISON_ITEMS,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const setComparisonStart = (payload: boolean): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_COMPARISON_START,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const setInitialOrder = (payload: number): IAction => {\r\n\treturn {\r\n\t\ttype: types.SET_INITIAL_ORDER,\r\n\t\tpayload\r\n\t}\r\n};\r\n\r\nexport const resetComparisonStage = (): IAction => {\r\n\treturn {\r\n\t\ttype: types.RESET_COMPARISON_STAGE,\r\n\t}\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {SelectionStage} from \"./SelectionStage\";\r\nimport { IItemType, IStore } from \"../../../redux/types\";\r\nimport {\r\n    addItemFirstPlayer,\r\n    addItemSecondPlayer,\r\n} from \"../../../redux/players-reducer/actionCreators\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    roundNumberChanged,\r\n    setGameStep, setInitialOrder,\r\n    setPlayerOrder, setRoundChange,\r\n    setSelectionItems\r\n} from \"../../../redux/game-reducer/actionsCreators\";\r\n\r\ninterface IMapState {\r\n    readonly playerOrder: number;\r\n    readonly roundNumber: number;\r\n    readonly selectionItems: ReadonlyArray<IItemType>;\r\n    readonly firstPlayerItemLength: number;\r\n    readonly secondPlayerItemLength: number;\r\n    readonly needToChangeRound: boolean;\r\n    readonly initialOrder: number;\r\n}\r\n\r\nfunction mapStateToProps(state: IStore): IMapState {\r\n    const {playerOrder, roundNumber, selectionItems, needToChangeRound} = state.gameReducer;\r\n\r\n    return {\r\n        playerOrder, roundNumber, selectionItems: selectionItems, needToChangeRound,\r\n        firstPlayerItemLength: state.playersReducer.playerOne.itemArray.length,\r\n        secondPlayerItemLength: state.playersReducer.playerTwo.itemArray.length,\r\n        initialOrder: state.gameReducer.initialOrder\r\n    }\r\n}\r\n\r\ninterface IMapDispatch {\r\n    readonly setSelectedItemFirstPlayer: (value: IItemType | IItemType[]) => void;\r\n    readonly setSelectedItemSecondPlayer: (value: IItemType | IItemType[]) => void;\r\n    readonly setSelectionItems: (value: any) => void;\r\n    readonly setPlayerOrder: (value: number) => void;\r\n    readonly roundNumberChanged: (value: number) => void;\r\n    readonly setGameStep: (value: string) => void;\r\n    readonly setRoundChange: (value: boolean) => void;\r\n    readonly setInitialOrder: (value: number) => void;\r\n    readonly resetSelectionStage: () => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => {\r\n    return {\r\n        setSelectedItemFirstPlayer: (value: any) => dispatch(addItemFirstPlayer(value)),\r\n        setSelectedItemSecondPlayer: (value: any) => dispatch(addItemSecondPlayer(value)),\r\n        setSelectionItems: (value: any) => dispatch(setSelectionItems(value)),\r\n        setPlayerOrder: (value: number) => dispatch(setPlayerOrder(value)),\r\n        roundNumberChanged: (value: number) => dispatch(roundNumberChanged(value)),\r\n        setGameStep: (value: any) => dispatch(setGameStep(value)),\r\n        setRoundChange: (value: boolean) => dispatch(setRoundChange(value)),\r\n        setInitialOrder: (value: number) => dispatch(setInitialOrder(value)),\r\n        resetSelectionStage: () => {\r\n            dispatch(setRoundChange(false));\r\n            dispatch(roundNumberChanged(1));\r\n        }\r\n    }\r\n}\r\n\r\nexport type IProps = IMapState & IMapDispatch;\r\nexport const SelectionStageContainer = connect(mapStateToProps, mapDispatchToProps)(SelectionStage);\r\n","export const playerActionsTypes = {\r\n\tPROTECT: 'PROTECT',\r\n\tATTACK: 'ATTACK',\r\n\tETHER: 'ETHER'\r\n}\r\n\r\nexport enum firstPlayerActions {\r\n\tPROTECT,\r\n\tATTACK,\r\n\tETHER\r\n}\r\n\r\nexport enum secondPlayerActions {\r\n\tATTACK,\r\n\tPROTECT,\r\n\tETHER\r\n}\r\n\r\nexport const comparisonDelaySecond = 1000;","import React, { useCallback, useEffect } from \"react\";\r\nimport { RandomSelect } from \"./RandomSelect/RandomSelect\";\r\nimport { IProps } from \"./index\";\r\nimport { gameSteps } from \"../../../redux/game-reducer/constants\";\r\n\r\nimport styles from './SelectionStage.module.scss';\r\nimport { playerActions, players, randomNumber, rules } from \"./utils\";\r\nimport { uid } from \"uid\";\r\nimport { IItemType } from \"../../../redux/types\";\r\nimport { nextSelectionStep, playerSwitcher } from \"./selectionRules\";\r\n\r\nexport const SelectionStage: React.FunctionComponent<IProps> = (props) => {\r\n\r\n    const {\r\n        playerOrder,\r\n        roundNumber,\r\n        setSelectedItemFirstPlayer,\r\n        setSelectedItemSecondPlayer,\r\n        setSelectionItems,\r\n        selectionItems,\r\n        setPlayerOrder,\r\n        roundNumberChanged,\r\n        firstPlayerItemLength,\r\n        secondPlayerItemLength,\r\n        setGameStep,\r\n        needToChangeRound,\r\n        initialOrder,\r\n        setInitialOrder,\r\n        resetSelectionStage\r\n    } = props\r\n\r\n    const startRandom = useCallback(() => {\r\n        const itemsCount = rules.ITEM_COUNT - (playerOrder === players.FIRST_PLAYER\r\n            ? firstPlayerItemLength\r\n            : secondPlayerItemLength);\r\n        const newState = [];\r\n\r\n        for (let i = 0; i < itemsCount; i++) {\r\n            newState.push({id: uid(), value: playerActions[randomNumber(rules.ITEM_VARIANTS)]});\r\n        }\r\n        setSelectionItems(newState);\r\n    }, [playerOrder, firstPlayerItemLength, secondPlayerItemLength, setSelectionItems]);\r\n\r\n    const onItemSelect = useCallback((item) => {\r\n        const filteredSelectionItem = selectionItems\r\n            .filter((arrayItem: IItemType) => arrayItem.id !== item.id);\r\n\r\n        setSelectionItems(filteredSelectionItem);\r\n\r\n        if (playerOrder === players.FIRST_PLAYER) {\r\n            setSelectedItemFirstPlayer(item);\r\n        } else {\r\n            setSelectedItemSecondPlayer(item);\r\n        }\r\n\r\n    }, [selectionItems, setSelectionItems, playerOrder, setSelectedItemFirstPlayer, setSelectedItemSecondPlayer]);\r\n\r\n    useEffect(() => {\r\n        startRandom();\r\n    }, [playerOrder, roundNumber]);\r\n\r\n    \r\n    const changeOrder = useCallback(() => {\r\n       setPlayerOrder(playerSwitcher(playerOrder))\r\n    }, [playerOrder, setPlayerOrder]);\r\n\r\n    const changeRound = useCallback( () => {\r\n        if (roundNumber !== 3) {\r\n            roundNumberChanged(roundNumber + 1);\r\n        } else {\r\n            setGameStep(gameSteps.COMPARISON_STAGE);\r\n        }\r\n    }, [roundNumber, roundNumberChanged, setGameStep]);\r\n\r\n    const onNextStepClick = () => {\r\n        nextSelectionStep({ ...props, changeRound, changeOrder });\r\n    };\r\n\r\n    useEffect(() => () => {\r\n        const firstPlayerInNextRound = playerSwitcher(initialOrder);\r\n        setInitialOrder(firstPlayerInNextRound);\r\n        setPlayerOrder(firstPlayerInNextRound);\r\n        resetSelectionStage()\r\n    },[]);\r\n\r\n    return <div className={styles.container}>\r\n        <h3>Round {roundNumber} Player {playerOrder}</h3>\r\n        <RandomSelect\r\n            selectionItems={selectionItems}\r\n            onItemSelect={onItemSelect}\r\n        />\r\n        <button className={styles.changePlayerButton} onClick={onNextStepClick}>\r\n            {needToChangeRound && roundNumber === 3 ? 'START BATTLE!' : `NEXT PLAYER ${playerOrder === 1 ? 2 : 1}`}\r\n        </button>\r\n    </div>\r\n};\r\n","import { playerActionsTypes } from \"./utils\";\r\nimport { uid } from \"uid\";\r\nimport { IComparisonItem, IItemType } from \"../../../redux/types\";\r\nimport { IComparisonItems } from \"../../../redux/game-reducer/types\";\r\n\r\nconst createEmptyValues = (count: number) => {\r\n\tconst values = [];\r\n\r\n\tfor (let i = 0; i < count; i ++) {\r\n\t\tvalues.push({id: uid(), value: '', visible: false})\r\n\t}\r\n\r\n\treturn values;\r\n}\r\n\r\nexport const comparisonBuilder = (firstPlayerItems: ReadonlyArray<IItemType>, secondPlayerItems: ReadonlyArray<IItemType>): IComparisonItems => {\r\n\tconst formatFirstPlayerItem = firstPlayerItems.map((item) => ({...item, visible: true}));\r\n\tconst formatSecondPlayerItem = secondPlayerItems.map((item) => ({...item, visible: true}));\r\n\r\n\tconst firstPlayerAttack: IComparisonItem[] = [];\r\n\tconst firstPlayerProtect: IComparisonItem[] = [];\r\n\tconst firstPlayerEther: IComparisonItem[] = [];\r\n\r\n\tconst secondPlayerAttack: IComparisonItem[] = [];\r\n\tconst secondPlayerProtect: IComparisonItem[] = [];\r\n\tconst secondPlayerEther: IComparisonItem[] = [];\r\n\r\n\tconst sorter = (player: number, item: IComparisonItem) => {\r\n\t\tif (player === 1) {\r\n\t\t\tswitch (item.value) {\r\n\t\t\t\tcase playerActionsTypes.ATTACK: firstPlayerAttack.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase playerActionsTypes.PROTECT: firstPlayerProtect.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: firstPlayerEther.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tswitch (item.value) {\r\n\t\t\t\tcase playerActionsTypes.ATTACK: secondPlayerAttack.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase playerActionsTypes.PROTECT: secondPlayerProtect.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: secondPlayerEther.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( let i = 0; i < formatFirstPlayerItem.length; i++ ) {\r\n\t\tsorter(1, formatFirstPlayerItem[i]);\r\n\t\tsorter(2, formatSecondPlayerItem[i]);\r\n\t}\r\n\r\n\r\n\tlet playerOneItems = [...firstPlayerProtect];\r\n\tlet playerTwoItems = [...secondPlayerAttack];\r\n\r\n\tconst distributor = (firstValue: number, secondValue: number) => {\r\n\t\tif (firstValue !== secondValue) {\r\n\t\t\tif (firstValue > secondValue) {\r\n\t\t\t\tplayerTwoItems.push(...createEmptyValues(firstValue - secondValue));\r\n\t\t\t} else {\r\n\t\t\t\tplayerOneItems.push(...createEmptyValues(secondValue - firstValue));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// First step of comparison\r\n\tdistributor(firstPlayerProtect.length, secondPlayerAttack.length);\r\n\r\n\t// Second step of comparison\r\n\tplayerOneItems.push(...firstPlayerAttack);\r\n\tplayerTwoItems.push(...secondPlayerProtect);\r\n\r\n\tdistributor(firstPlayerAttack.length, secondPlayerProtect.length);\r\n\r\n\t// Third step of comparison\r\n\tplayerOneItems.push(...firstPlayerEther);\r\n\tplayerTwoItems.push(...secondPlayerEther);\r\n\r\n\treturn { playerOneItems, playerTwoItems };\r\n}","import { connect } from \"react-redux\";\r\nimport { ComparisonStage } from \"./ComparisonStage\";\r\nimport { IItemType, IStore } from \"../../../redux/types\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n\tresetItemsOfPlayers,\r\n\tsetEtherFirstPlayer, setEtherSecondPlayer,\r\n\tsetLivesFirstPlayer,\r\n\tsetLivesSecondPlayer\r\n} from \"../../../redux/players-reducer/actionCreators\";\r\nimport {\r\n\tresetComparisonStage,\r\n\tsetComparisonIndex,\r\n\tsetComparisonItems,\r\n\tsetComparisonStart,\r\n\tsetGameStep\r\n} from \"../../../redux/game-reducer/actionsCreators\";\r\nimport { IComparisonItems } from \"../../../redux/game-reducer/types\";\r\nimport { gameSteps } from \"../../../redux/game-reducer/constants\";\r\n\r\ninterface IMapState {\r\n\treadonly playerOneItems: ReadonlyArray<IItemType>;\r\n\treadonly playerTwoItems: ReadonlyArray<IItemType>;\r\n\treadonly playerOneLives: number;\r\n\treadonly playerTwoLives: number;\r\n\treadonly playerOneEther: number;\r\n\treadonly playerTwoEther: number;\r\n\treadonly comparisonIndex: number;\r\n\treadonly comparisonItems: IComparisonItems;\r\n\treadonly comparisonStart: boolean;\r\n}\r\n\r\ninterface IMapDispatch {\r\n\treadonly setFirstPlayerLives: (value: number) => void;\r\n\treadonly setSecondPlayerLives: (value: number) => void;\r\n\treadonly setFirstPlayerEther: (value: number) => void;\r\n\treadonly setSecondPlayerEther: (value: number) => void;\r\n\treadonly setComparisonIndex: (value: number) => void;\r\n\treadonly setComparisonItems: (value: IComparisonItems) => void;\r\n\treadonly setComparisonStart: (value: boolean) => void;\r\n\treadonly setGameSelectStep:() => void;\r\n\treadonly resetPlayersItems: () => void;\r\n\treadonly resetComparisonState: () => void;\r\n}\r\n\r\nfunction mapStateToProps (state: IStore): IMapState {\r\n\tconst { playerOne, playerTwo } = state.playersReducer;\r\n\tconst { comparisonIndex, comparisonItems, comparisonStart } = state.gameReducer;\r\n\r\n\treturn {\r\n\t\tplayerOneLives: playerOne.lives,\r\n\t\tplayerTwoLives: playerTwo.lives,\r\n\t\tplayerOneItems: playerOne.itemArray,\r\n\t\tplayerTwoItems: playerTwo.itemArray,\r\n\t\tplayerOneEther: playerOne.ether,\r\n\t\tplayerTwoEther: playerTwo.ether,\r\n\t\tcomparisonIndex,\r\n\t\tcomparisonItems,\r\n\t\tcomparisonStart\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch):IMapDispatch {\r\n\treturn {\r\n\t\tsetFirstPlayerLives: (value) => dispatch(setLivesFirstPlayer(value)),\r\n\t\tsetSecondPlayerLives: (value) => dispatch(setLivesSecondPlayer(value)),\r\n\t\tsetFirstPlayerEther: (value) => dispatch(setEtherFirstPlayer(value)),\r\n\t\tsetSecondPlayerEther: (value) => dispatch(setEtherSecondPlayer(value)),\r\n\t\tsetComparisonIndex: (value) => dispatch(setComparisonIndex(value)),\r\n\t\tsetComparisonItems: (value) => dispatch(setComparisonItems(value)),\r\n\t\tsetComparisonStart: (value) => dispatch(setComparisonStart(value)),\r\n\t\tsetGameSelectStep:() => dispatch(setGameStep(gameSteps.SELECTION_STAGE)),\r\n\t\tresetPlayersItems: () => dispatch(resetItemsOfPlayers()),\r\n\t\tresetComparisonState: () => dispatch(resetComparisonStage())\r\n\t}\r\n}\r\n\r\nexport type IProps = IMapState & IMapDispatch;\r\n\r\nexport const ComparisonStageContainer = connect(mapStateToProps, mapDispatchToProps)(ComparisonStage);\r\n","import React, { useEffect } from \"react\";\r\nimport { IProps } from \"./index\";\r\n\r\nimport styles from './ComparisonStage.module.scss';\r\nimport { comparisonBuilder } from \"./comparisonBuilder\";\r\nimport { PlayerItem } from \"../../common/PlayerItem/PlayerItem\";\r\nimport { comparator } from \"./comporisonRules\";\r\n\r\nexport const ComparisonStage: React.FunctionComponent<IProps> = (props) => {\r\n\tconst {\r\n\t\tplayerOneItems,\r\n\t\tplayerTwoItems,\r\n\t\tcomparisonIndex,\r\n\t\tcomparisonItems,\r\n\t\tsetComparisonItems,\r\n\t\tcomparisonStart,\r\n\t\tsetComparisonStart,\r\n\t\tresetComparisonState,\r\n\t\tresetPlayersItems,\r\n\t} = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tsetComparisonItems(comparisonBuilder(playerOneItems, playerTwoItems));\r\n\t\tsetComparisonStart(true);\r\n\t\tresetPlayersItems();\r\n\r\n\t\treturn () => {\r\n\t\t\tresetComparisonState();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (comparisonStart) {\r\n\t\t\tcomparator({...props});\r\n\t\t}\r\n\t}, [comparisonIndex, comparisonStart]);\r\n\r\n\treturn <div className={styles.container}>\r\n\t\t<div>\r\n\t\t\t{comparisonItems.playerTwoItems.map((item:any) => <PlayerItem key = {item.id} value={item.value} visible={item.visible}/>)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t{comparisonItems.playerOneItems.map((item:any) => <PlayerItem key = {item.id} value={item.value} visible={item.visible}/>)}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n","import { playerActionsTypes } from \"../SelectionStage/utils\";\r\nimport { comparisonDelaySecond } from \"./utils\";\r\nimport { IComparisonItems } from \"../../../redux/game-reducer/types\";\r\n\r\ninterface IComparator {\r\n\treadonly playerOneLives: number;\r\n\treadonly setFirstPlayerLives: (value: number) => void;\r\n\treadonly playerTwoLives: number;\r\n\treadonly setSecondPlayerLives: (value: number) => void;\r\n\treadonly playerOneEther: number;\r\n\treadonly setFirstPlayerEther: (value: number) => void;\r\n\treadonly playerTwoEther: number;\r\n\treadonly setSecondPlayerEther: (value: number) => void;\r\n\treadonly comparisonItems: IComparisonItems;\r\n\treadonly comparisonIndex: number;\r\n\treadonly setComparisonItems: (value: IComparisonItems) => void;\r\n\treadonly setComparisonIndex: (value: number) => void;\r\n\treadonly setGameSelectStep:() => void;\r\n}\r\n\r\nexport const comparator = (props: IComparator) => {\r\n\tconst {\r\n\t\tplayerOneLives,\r\n\t\tsetFirstPlayerLives,\r\n\t\tplayerTwoLives,\r\n\t\tsetSecondPlayerLives,\r\n\t\tplayerOneEther,\r\n\t\tsetFirstPlayerEther,\r\n\t\tplayerTwoEther,\r\n\t\tsetSecondPlayerEther,\r\n\t\tcomparisonItems,\r\n\t\tcomparisonIndex,\r\n\t\tsetComparisonItems,\r\n\t\tsetComparisonIndex,\r\n\t\tsetGameSelectStep,\r\n\t} = props;\r\n\r\n\tconst maxLength = Math.max(comparisonItems.playerOneItems.length, comparisonItems.playerTwoItems.length);\r\n\r\n\tsetTimeout(() => {\r\n\t\t// To use daley put next code before timeout\r\n\t\tconst newState = comparisonItems;\r\n\r\n\t\tif (newState.playerOneItems[comparisonIndex]) {\r\n\t\t\tnewState.playerOneItems[comparisonIndex].visible = false;\r\n\t\t}\r\n\t\tif (newState.playerTwoItems[comparisonIndex]) {\r\n\t\t\tnewState.playerTwoItems[comparisonIndex].visible = false;\r\n\t\t}\r\n\t\tsetComparisonItems(newState)\r\n\t\t//--------\r\n\r\n\t\tif (comparisonItems.playerTwoItems[comparisonIndex]?.value === playerActionsTypes.ATTACK\r\n\t\t\t&& comparisonItems.playerOneItems[comparisonIndex].value !== playerActionsTypes.PROTECT) {\r\n\r\n\t\t\tif (playerOneLives > 1) {\r\n\t\t\t\tsetFirstPlayerLives(playerOneLives - 1);\r\n\t\t\t} else {\r\n\t\t\t\tsetFirstPlayerLives(playerOneLives - 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (comparisonItems.playerOneItems[comparisonIndex]?.value === playerActionsTypes.ATTACK\r\n\t\t\t&& comparisonItems.playerTwoItems[comparisonIndex].value !== playerActionsTypes.PROTECT) {\r\n\r\n\t\t\tif (playerTwoLives > 1) {\r\n\t\t\t\tsetSecondPlayerLives(playerTwoLives - 1);\r\n\t\t\t} else {\r\n\t\t\t\tsetSecondPlayerLives(playerTwoLives - 1);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (comparisonItems.playerOneItems[comparisonIndex]?.value === playerActionsTypes.ETHER) {\r\n\t\t\tsetFirstPlayerEther(playerOneEther + 1);\r\n\t\t}\r\n\r\n\t\tif (comparisonItems.playerTwoItems[comparisonIndex]?.value === playerActionsTypes.ETHER) {\r\n\t\t\tsetSecondPlayerEther(playerTwoEther + 1);\r\n\t\t}\r\n\r\n\t\tif (comparisonIndex < maxLength - 1) {\r\n\t\t\tsetComparisonIndex(comparisonIndex + 1);\r\n\t\t}\r\n\r\n\t\tif (comparisonIndex === maxLength - 1) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetGameSelectStep();\r\n\t\t\t}, comparisonDelaySecond);\r\n\t\t}\r\n\t}, comparisonDelaySecond);\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { RandomPlayerCoin } from \"./RandomPlayerCoin\";\r\nimport { Dispatch } from \"redux\";\r\nimport { setGameStep, setInitialOrder, setPlayerOrder } from \"../../../redux/game-reducer/actionsCreators\";\r\nimport { IStore } from \"../../../redux/types\";\r\nimport { gameSteps } from \"../../../redux/game-reducer/constants\";\r\n\r\ninterface IMapState {\r\n\treadonly playerOrder: number;\r\n}\r\n\r\ninterface IMapDispatch {\r\n\treadonly chooseFirstPlayer: (value: number) => void;\r\n\treadonly setSelectionType: () => void;\r\n}\r\n\r\nfunction mapStateToProps (state: IStore): IMapState {\r\n\tconst { playerOrder } = state.gameReducer;\r\n\r\n\treturn {playerOrder};\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch): IMapDispatch {\r\n\treturn {\r\n\t\tchooseFirstPlayer: (value) => {\r\n\t\t\tdispatch(setPlayerOrder(value))\r\n\t\t\tdispatch(setInitialOrder(value))\r\n\t\t},\r\n\t\tsetSelectionType: () => dispatch(setGameStep(gameSteps.SELECTION_STAGE))\r\n\t};\r\n}\r\n\r\nexport type IProps = IMapState & IMapDispatch;\r\n\r\nexport const RandomPlayerCoinContainer = connect(mapStateToProps,mapDispatchToProps)(RandomPlayerCoin);\r\n","import React, { useEffect } from \"react\";\r\nimport { randomNumber } from \"./utils\";\r\n\r\nimport styles from './RandomPlayerCoin.module.scss';\r\nimport { IProps } from \"./index\";\r\n\r\nexport const RandomPlayerCoin: React.FunctionComponent<IProps> = ({chooseFirstPlayer, playerOrder, setSelectionType}) => {\r\n\tuseEffect(() => {\r\n\t\tconst answer = randomNumber(2) + 1;\r\n\t\tchooseFirstPlayer(answer);\r\n\t},[chooseFirstPlayer]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout (() => {\r\n\t\t\tsetSelectionType();\r\n\t\t}, 3500);\r\n\t}, [playerOrder]);\r\n\r\n\treturn <>\r\n\t\t{playerOrder && <div className={`${styles.container} ${playerOrder === 1 ? styles.spinFirst : styles.spinSecond}`}>\r\n\t\t\t<div className={styles.first}><span>1</span></div>\r\n\t\t\t<div className={styles.second}><span>2</span></div>\r\n\t\t</div>}\r\n\t</>\r\n}","export function randomNumber(max: number) {\r\n\treturn Math.floor(Math.random() * max);\r\n}","import React from \"react\";\r\nimport { IProps } from \"./ModalWinContainer\";\r\nimport style from './Modal.module.scss'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nlet playerModal = document.createElement('div');\r\nplayerModal.id = 'playerModal';\r\ndocument.body.appendChild(playerModal);\r\n\r\nexport const Modal: React.FunctionComponent<IProps> = (props) => {\r\n\r\n\tconst {\r\n\t\tlivesPlayerOne\r\n\t} = props;\r\n\r\n\tconst reload = () => {\r\n\t\twindow.location.reload()\r\n\t}\r\n\r\n\treturn ReactDOM.createPortal(\r\n\t\t<div className={ style.wrapper }>\r\n\t\t\t<div>\r\n\t\t\t\t<p>PLAYER { livesPlayerOne ? 'ONE' : 'TWO' } WIN</p>\r\n\t\t\t\t<p onClick={reload}>Reload the page to continue</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t, playerModal)\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"./Modal\";\r\nimport { IStore } from \"../../../redux/types\";\r\n\r\ninterface IMapState {\r\n    readonly livesPlayerOne: number;\r\n}\r\n\r\nconst mapStateToProps = (state:IStore):IMapState => {\r\n    return {\r\n        livesPlayerOne: state.playersReducer.playerOne.lives,\r\n    }\r\n};\r\n\r\nexport type IProps = IMapState;\r\nexport const ModalWinContainer = connect(mapStateToProps)(Modal);\r\n","import { connect } from \"react-redux\";\r\nimport { Game } from \"./Game\";\r\nimport { IStore } from \"../../redux/types\";\r\n\r\ninterface IMapState {\r\n\treadonly gameStep: string;\r\n\treadonly playerOrder: number;\r\n\treadonly livesPlayerOne: number;\r\n\treadonly livesPlayerTwo: number;\r\n}\r\n\r\nfunction mapStateToProps(state: IStore): IMapState {\r\n\tconst { gameStep, playerOrder } = state.gameReducer;\r\n\r\n\treturn {\r\n\t\tgameStep, playerOrder,\r\n\t\tlivesPlayerOne: state.playersReducer.playerOne.lives,\r\n\t\tlivesPlayerTwo: state.playersReducer.playerTwo.lives\r\n\t};\r\n}\r\n\r\nexport type IProps = IMapState;\r\n\r\nexport const GameContainer = connect(mapStateToProps)(Game)","import React from \"react\";\r\nimport { GameFiledContainer } from \"./PlayersArea\";\r\nimport { IProps } from \"./index\";\r\nimport { gameSteps } from \"../../redux/game-reducer/constants\";\r\nimport { SelectionStageContainer } from \"./SelectionStage\";\r\nimport { ComparisonStageContainer } from \"./ComparisonStage\";\r\nimport styles from './Game.module.scss';\r\nimport { RandomPlayerCoinContainer } from \"./RandomPlayerCoin\";\r\nimport { ModalWinContainer } from \"../Modal/ModalPlayersWins/ModalWinContainer\";\r\n\r\nexport const Game: React.FunctionComponent<IProps> = (props) => {\r\n\r\n\tconst {\r\n\t\tgameStep,\r\n\t\tlivesPlayerTwo,\r\n\t\tlivesPlayerOne\r\n\t} = props;\r\n\r\n\tconst gameStepSwitcher = (step: string) => {\r\n\t\tswitch (step) {\r\n\t\t\tcase gameSteps.CHOOSE_FIRST_PLAYER: return <RandomPlayerCoinContainer/>\r\n\t\t\tcase gameSteps.SELECTION_STAGE: return <SelectionStageContainer/>\r\n\t\t\tcase gameSteps.COMPARISON_STAGE: return <ComparisonStageContainer/>\r\n\t\t\tdefault: return null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn <>\r\n\t\t{\r\n\t\t\t(livesPlayerTwo === 0 || livesPlayerOne === 0) && <ModalWinContainer/>\r\n\t\t}\r\n\t\t<GameFiledContainer/>\r\n\t\t<div className={styles.stageWrapper}>\r\n\t\t\t{gameStepSwitcher(gameStep)}\r\n\t\t</div>\r\n\t</>\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport style from './App.module.scss';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ModalTestContainer } from \"./components/Modal/ModalTest/ModalTestContainer\";\r\nimport { GameContainer } from \"./components/Game\";\r\n\r\nconst App: React.FunctionComponent = () => {\r\n\r\n    const [isTestModalOpen, setTestModal] = useState(false);\r\n\r\n    const appRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if ((window.innerWidth / 16) * 9 < window.innerHeight) {\r\n            let value = (window.innerWidth * 100) / 192000;\r\n            let margin = (window.innerHeight - 1080 * value) / 2;\r\n\r\n            if (appRef?.current?.style) {\r\n                appRef.current.style.transform = `scale(${value})`;\r\n                appRef.current.style.top = `${margin}px`;\r\n            }\r\n        } else {\r\n            let value = (window.innerHeight * 100) / 108000;\r\n            let margin = (window.innerWidth - 1920 * value) / 2;\r\n\r\n            if (appRef?.current?.style) {\r\n                appRef.current.style.transform = `scale(${value})`;\r\n                appRef.current.style.left = `${margin}px`;\r\n            }\r\n        }\r\n    });\r\n\r\n    const switchTestPanel = (event: KeyboardEvent) => {\r\n        if (event.code === 'Backquote') {\r\n            setTestModal(isTestModalOpen => !isTestModalOpen);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', switchTestPanel);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', switchTestPanel);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            {\r\n                isTestModalOpen && <ModalTestContainer/>\r\n            }\r\n            <div className={style.container}>\r\n                <div className={style.appWrapper} ref={appRef}>\r\n                    <GameContainer/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"PlayersArea_field__1jR4E\",\"firstPlayer\":\"PlayersArea_firstPlayer__1IP5u\",\"valueContainer\":\"PlayersArea_valueContainer__3aFxh\",\"secondPlayer\":\"PlayersArea_secondPlayer__sPpkk\",\"test\":\"PlayersArea_test__BR7kW\",\"lives\":\"PlayersArea_lives__13Teh\",\"items\":\"PlayersArea_items__3C6cH\"};"],"sourceRoot":""}